ZSH=$HOME/.oh-my-zsh

# You can change the theme with another one from https://github.com/robbyrussell/oh-my-zsh/wiki/themes
ZSH_THEME="robbyrussell"

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"

plugins=(git gitfast common-aliases zsh-syntax-highlighting nvm fzf ssh-agent zsh-autosuggestions pyenv)

# nvm lazy loading (with nvm plugin)
zstyle ':omz:plugins:nvm' lazy yes
# This lists custom commands that will load nvm (nvim need it for copilot)
zstyle ':omz:plugins:nvm' lazy-cmd nvim code rails ruby python pip pipenv

# export FZF_DEFAULT_COMMAND="find . -not \( -path '*/.git' -prune \)"
export FZF_DEFAULT_COMMAND="fd"

# Actually load Oh-My-Zsh
source "${ZSH}/oh-my-zsh.sh"
unalias rm # No interactive rm by default (brought by plugins/common-aliases)
unalias lt # we need `lt` for https://github.com/localtunnel/localtunnel

# Load rbenv if installed (to manage your Ruby versions)
export PATH="${HOME}/.rbenv/bin:${PATH}" # Needed for Linux/WSL
type -a rbenv > /dev/null && eval "$(rbenv init - zsh)"

# Load pyenv (to manage your Python versions)
# export PYENV_VIRTUALENV_DISABLE_PROMPT=1
# type -a pyenv > /dev/null && eval "$(pyenv init -)" && eval "$(pyenv virtualenv-init -)" && RPROMPT+='[🐍 $(pyenv version-name)]'

# Rails and Ruby uses the local `bin` folder to store binstubs.
# So instead of running `bin/rails` like the doc says, just run `rails`
# Same for `./node_modules/.bin` and nodejs
export PATH="./bin:./node_modules/.bin:${PATH}:/usr/local/sbin"

# Store your own aliases in the ~/.aliases file and load the here.
[[ -f "$HOME/.aliases" ]] && source "$HOME/.aliases"

# Encoding stuff for the terminal
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

export BUNDLER_EDITOR=nvim
export EDITOR=nvim

# Set ipdb as the default Python debugger
export PYTHONBREAKPOINT=ipdb.set_trace

# OCGG

export PATH=$PATH:~/scripts
export PATH=$PATH:~/code/ftrack
export PATH=$PATH:~/.local/bin
export GOBIN=$HOME/go/bin/
export RUSTBIN=$HOME/.cargo/bin/
export PATH=$PATH:$GOBIN:$RUSTBIN
# avoid __pycache__ folder generation in python project folders
export PYTHONPYCACHEPREFIX=/tmp/python/__pycache__

# For Ardour
export XDG_CONFIG_HOME=~/.config
export LXVST_PATH=/usr/lib64/vst:~/.vst
export VST3_PATH=~/.vst3
export LADSPA_PATH=/usr/lib64/ladspa
export LV2_PATH=/usr/lib64/lv2:~/.lv2

# Added by LM Studio CLI (lms)
# export PATH="$PATH:/home/ocgg/.lmstudio/bin"

# find in files wih ripgrep+fzf
fif() {
  if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
  rg --files-with-matches --no-messages "$1" | fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"
}

# Change LS_COLORS to get rid of OMZ's annoying green background in ls & completion
# export LS_COLORS='fi=00:mi=00:mh=00:ln=01;36:or=01;31:di=01;34:ow=04;01;34:st=34:tw=04;34:'
# LS_COLORS+='pi=01;33:so=01;33:do=01;33:bd=01;33:cd=01;33:su=01;35:sg=01;35:ca=01;35:ex=01;32'
LS_COLORS="ow=04;01;34"
# Use ls colors in completion lists.
zstyle ':completion:*' list-colors "${(@s.:.)LS_COLORS}"

# export NVM_DIR="$HOME/.config/nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
