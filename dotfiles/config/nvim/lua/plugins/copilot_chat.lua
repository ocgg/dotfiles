return {
    --
    -- "CopilotC-Nvim/CopilotChat.nvim",
    -- -- branch = "main",
    -- dependencies = {
    --     { "zbirenbaum/copilot.lua" }, -- or github/copilot.vim
    --     { "nvim-lua/plenary.nvim" }, -- for curl, log wrapper
    -- },
    -- -- build = "make tiktoken", -- Only on MacOS or Linux
    -- opts = {
    --     debug = true,        -- Enable debugging
    --     -- See Configuration section for rest
    --     model = 'gpt-4.1',   -- AI model to use
    --     temperature = 0.1,   -- Lower = focused, higher = creative
    --     window = {
    --         layout = 'vertical', -- 'vertical', 'horizontal', 'float'
    --         width = 0.5,     -- 50% of screen width
    --     },
    --     auto_insert_mode = true, -- Enter insert mode when opening
    -- },
    -- keys = {
    --     {
    --         "<leader>ah",
    --         function()
    --             local actions = require("CopilotChat.actions")
    --             require("CopilotChat.integrations.telescope").pick(actions.help_actions())
    --         end,
    --         desc = "CopilotChat - Actions d'aide",
    --     },
    --     {
    --         "<leader>ap",
    --         function()
    --             local actions = require("CopilotChat.actions")
    --             require("CopilotChat.integrations.telescope").pick(actions.prompt_actions())
    --         end,
    --         desc = "CopilotChat - Actions de prompt",
    --     },
    --     {
    --         "<leader>ap",
    --         ":lua require('CopilotChat.integrations.telescope').pick(require('CopilotChat.actions').prompt_actions({selection = require('CopilotChat.select').visual}))<CR>",
    --         mode = "x",
    --         desc = "CopilotChat - Actions de prompt (visuel)",
    --     },
    --     {
    --         "<leader>ae",
    --         function()
    --             vim.cmd("CopilotChat Explain this code")
    --         end,
    --         desc = "CopilotChat - Expliquer le code",
    --     },
    --     {
    --         "<leader>at",
    --         function()
    --             vim.cmd("CopilotChat Write tests for this code")
    --         end,
    --         desc = "CopilotChat - Générer des tests",
    --     },
    --     {
    --         "<leader>ar",
    --         function()
    --             vim.cmd("CopilotChat Review this code")
    --         end,
    --         desc = "CopilotChat - Revoir le code",
    --     },
    --     {
    --         "<leader>aR",
    --         function()
    --             vim.cmd("CopilotChat Refactor this code")
    --         end,
    --         desc = "CopilotChat - Refactoriser le code",
    --     },
    --     {
    --         "<leader>an",
    --         function()
    --             vim.cmd("CopilotChat Suggest better names")
    --         end,
    --         desc = "CopilotChat - Meilleurs noms",
    --     },
    --     {
    --         "<leader>ax",
    --         ":CopilotChatInline<cr>",
    --         mode = "x",
    --         desc = "CopilotChat - Chat en ligne",
    --     },
    --     {
    --         "<leader>ai",
    --         function()
    --             local input = vim.fn.input("Demander à Copilot : ")
    --             if input ~= "" then
    --                 vim.cmd("CopilotChat " .. input)
    --             end
    --         end,
    --         desc = "CopilotChat - Demande personnalisée",
    --     },
    --     {
    --         "<leader>am",
    --         function()
    --             vim.cmd("CopilotChat Write commit message for the changes")
    --         end,
    --         desc = "CopilotChat - Générer un message de commit",
    --     },
    --     {
    --         "<leader>aq",
    --         function()
    --             local input = vim.fn.input("Chat rapide : ")
    --             if input ~= "" then
    --                 vim.cmd("CopilotChatBuffer " .. input)
    --             end
    --         end,
    --         desc = "CopilotChat - Chat rapide",
    --     },
    --     { "<leader>ad", "<cmd>CopilotChatDebugInfo<cr>",     desc = "CopilotChat - Infos de debug" },
    --     {
    --         "<leader>af",
    --         function()
    --             vim.cmd("CopilotChat Fix diagnostics")
    --         end,
    --         desc = "CopilotChat - Corriger le diagnostic",
    --     },
    --     { "<leader>al", "<cmd>CopilotChatReset<cr>",         desc = "CopilotChat - Réinitialiser le buffer et l'historique" },
    --     { "<leader>av", "<cmd>CopilotChatToggle<cr>",        desc = "CopilotChat - Toggle" },
    --     { "<leader>a?", "<cmd>CopilotChatModels<cr>",        desc = "CopilotChat - Sélectionner le modèle" },
    -- },
}
